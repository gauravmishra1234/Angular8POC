import * as tslib_1 from "tslib";
import { filter } from 'rxjs/operators';
import { StrategyBase } from './strategy-base';
import { InitialScrollPosition } from '../enum/initial-scroll-position-type.enum';
var ScrollingToTop = /** @class */ (function (_super) {
    tslib_1.__extends(ScrollingToTop, _super);
    function ScrollingToTop(directive, state) {
        return _super.call(this, directive, state) || this;
    }
    ScrollingToTop.prototype.scrollDirectionChanged = function (scrollPairChanged) {
        var _this = this;
        return scrollPairChanged.pipe(filter(function (scrollPositions) {
            return _super.prototype.wasScrolledUp.call(_this, scrollPositions[0], scrollPositions[1]);
        }));
    };
    ScrollingToTop.prototype.scrollRequestZoneChanged = function (scrollDirectionChanged) {
        var _this = this;
        return scrollDirectionChanged.pipe(filter(function (scrollPositions) {
            return _super.prototype.isScrollUpEnough.call(_this, scrollPositions[1], _this.directive.scrollUpPercentilePositionTrigger);
        }));
    };
    ScrollingToTop.prototype.askForUpdate = function () {
        this.directive.onScrollUp.next();
    };
    ScrollingToTop.prototype.setInitialScrollPosition = function () {
        var initialScrollPositionValue = _super.prototype.getInitialScrollPositionValue.call(this, InitialScrollPosition.BOTTOM);
        this.directive.scrollTo(initialScrollPositionValue);
    };
    ScrollingToTop.prototype.setPreviousScrollPosition = function () {
        var prevScrollPosition = this.state.previousScrollTop +
            (this.state.scrollHeight - this.state.previousScrollHeight);
        this.directive.scrollTo(prevScrollPosition);
    };
    return ScrollingToTop;
}(StrategyBase));
export { ScrollingToTop };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsaW5nLXRvLXRvcC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1pbmZpbml0ZS1zY3JvbGxlci8iLCJzb3VyY2VzIjpbInNyYy9hcHAvc2Nyb2xsaW5nLXN0cmF0ZWd5L3Njcm9sbGluZy10by10b3AudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFPL0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFFbEY7SUFBb0MsMENBQVk7SUFFOUMsd0JBQ0UsU0FBdUMsRUFDdkMsS0FBNEI7ZUFFNUIsa0JBQU0sU0FBUyxFQUFFLEtBQUssQ0FBQztJQUN6QixDQUFDO0lBRU0sK0NBQXNCLEdBQTdCLFVBQThCLGlCQUErQztRQUE3RSxpQkFVQztRQVJDLE9BQU8saUJBQWlCLENBQUMsSUFBSSxDQUMzQixNQUFNLENBQUMsVUFBQyxlQUFpQztZQUN2QyxPQUFPLGlCQUFNLGFBQWEsYUFDeEIsZUFBZSxDQUFDLENBQUMsQ0FBQyxFQUNsQixlQUFlLENBQUMsQ0FBQyxDQUFDLENBQ25CLENBQUM7UUFDSixDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVNLGlEQUF3QixHQUEvQixVQUFnQyxzQkFBb0Q7UUFBcEYsaUJBVUM7UUFSQyxPQUFPLHNCQUFzQixDQUFDLElBQUksQ0FDaEMsTUFBTSxDQUFDLFVBQUMsZUFBaUM7WUFDdkMsT0FBTyxpQkFBTSxnQkFBZ0IsYUFDM0IsZUFBZSxDQUFDLENBQUMsQ0FBQyxFQUNsQixLQUFJLENBQUMsU0FBUyxDQUFDLGlDQUFpQyxDQUNqRCxDQUFDO1FBQ0osQ0FBQyxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7SUFFTSxxQ0FBWSxHQUFuQjtRQUNFLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ25DLENBQUM7SUFFTSxpREFBd0IsR0FBL0I7UUFDRSxJQUFNLDBCQUEwQixHQUFHLGlCQUFNLDZCQUE2QixZQUNwRSxxQkFBcUIsQ0FBQyxNQUFNLENBQzdCLENBQUM7UUFFRixJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFTSxrREFBeUIsR0FBaEM7UUFDRSxJQUFNLGtCQUFrQixHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQWlCO1lBQ3JELENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQzlELElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQWxERCxDQUFvQyxZQUFZLEdBa0QvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGZpbHRlciB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW1wb3J0IHsgU3RyYXRlZ3lCYXNlIH0gZnJvbSAnLi9zdHJhdGVneS1iYXNlJztcblxuaW1wb3J0IHsgTmd4SW5maW5pdGVTY3JvbGxlckRpcmVjdGl2ZSB9IGZyb20gJy4uL25neC1pbmZpbml0ZS1zY3JvbGxlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgRGlyZWN0aXZlU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vZGlyZWN0aXZlLXN0YXRlLnNlcnZpY2UnO1xuXG5pbXBvcnQgeyBTY3JvbGxpbmdTdHJhdGVneSB9IGZyb20gJy4uL21vZGVsL3Njcm9sbGluZy1zdHJhdGVneS5tb2RlbCc7XG5pbXBvcnQgeyBTY3JvbGxQb3NpdGlvbiB9IGZyb20gJy4uL21vZGVsL3Njcm9sbC1wb3NpdGlvbi5tb2RlbCc7XG5pbXBvcnQgeyBJbml0aWFsU2Nyb2xsUG9zaXRpb24gfSBmcm9tICcuLi9lbnVtL2luaXRpYWwtc2Nyb2xsLXBvc2l0aW9uLXR5cGUuZW51bSc7XG5cbmV4cG9ydCBjbGFzcyBTY3JvbGxpbmdUb1RvcCBleHRlbmRzIFN0cmF0ZWd5QmFzZSBpbXBsZW1lbnRzIFNjcm9sbGluZ1N0cmF0ZWd5IHtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBkaXJlY3RpdmU6IE5neEluZmluaXRlU2Nyb2xsZXJEaXJlY3RpdmUsXG4gICAgc3RhdGU6IERpcmVjdGl2ZVN0YXRlU2VydmljZVxuICApIHtcbiAgICBzdXBlcihkaXJlY3RpdmUsIHN0YXRlKTtcbiAgfVxuXG4gIHB1YmxpYyBzY3JvbGxEaXJlY3Rpb25DaGFuZ2VkKHNjcm9sbFBhaXJDaGFuZ2VkOiBPYnNlcnZhYmxlPFNjcm9sbFBvc2l0aW9uW10+KTpcbiAgICBPYnNlcnZhYmxlPFNjcm9sbFBvc2l0aW9uW10+IHtcbiAgICByZXR1cm4gc2Nyb2xsUGFpckNoYW5nZWQucGlwZShcbiAgICAgIGZpbHRlcigoc2Nyb2xsUG9zaXRpb25zOiBTY3JvbGxQb3NpdGlvbltdKSA9PiB7XG4gICAgICAgIHJldHVybiBzdXBlci53YXNTY3JvbGxlZFVwKFxuICAgICAgICAgIHNjcm9sbFBvc2l0aW9uc1swXSxcbiAgICAgICAgICBzY3JvbGxQb3NpdGlvbnNbMV1cbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBzY3JvbGxSZXF1ZXN0Wm9uZUNoYW5nZWQoc2Nyb2xsRGlyZWN0aW9uQ2hhbmdlZDogT2JzZXJ2YWJsZTxTY3JvbGxQb3NpdGlvbltdPik6XG4gICAgT2JzZXJ2YWJsZTxTY3JvbGxQb3NpdGlvbltdPiB7XG4gICAgcmV0dXJuIHNjcm9sbERpcmVjdGlvbkNoYW5nZWQucGlwZShcbiAgICAgIGZpbHRlcigoc2Nyb2xsUG9zaXRpb25zOiBTY3JvbGxQb3NpdGlvbltdKSA9PiB7XG4gICAgICAgIHJldHVybiBzdXBlci5pc1Njcm9sbFVwRW5vdWdoKFxuICAgICAgICAgIHNjcm9sbFBvc2l0aW9uc1sxXSxcbiAgICAgICAgICB0aGlzLmRpcmVjdGl2ZS5zY3JvbGxVcFBlcmNlbnRpbGVQb3NpdGlvblRyaWdnZXJcbiAgICAgICAgKTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBhc2tGb3JVcGRhdGUoKTogdm9pZCB7XG4gICAgdGhpcy5kaXJlY3RpdmUub25TY3JvbGxVcC5uZXh0KCk7XG4gIH1cblxuICBwdWJsaWMgc2V0SW5pdGlhbFNjcm9sbFBvc2l0aW9uKCk6IHZvaWQge1xuICAgIGNvbnN0IGluaXRpYWxTY3JvbGxQb3NpdGlvblZhbHVlID0gc3VwZXIuZ2V0SW5pdGlhbFNjcm9sbFBvc2l0aW9uVmFsdWUoXG4gICAgICBJbml0aWFsU2Nyb2xsUG9zaXRpb24uQk9UVE9NLFxuICAgICk7XG5cbiAgICB0aGlzLmRpcmVjdGl2ZS5zY3JvbGxUbyhpbml0aWFsU2Nyb2xsUG9zaXRpb25WYWx1ZSk7XG4gIH1cblxuICBwdWJsaWMgc2V0UHJldmlvdXNTY3JvbGxQb3NpdGlvbigpOiB2b2lkIHtcbiAgICBjb25zdCBwcmV2U2Nyb2xsUG9zaXRpb24gPSB0aGlzLnN0YXRlLnByZXZpb3VzU2Nyb2xsVG9wICtcbiAgICAgICh0aGlzLnN0YXRlLnNjcm9sbEhlaWdodCAtIHRoaXMuc3RhdGUucHJldmlvdXNTY3JvbGxIZWlnaHQpO1xuICAgIHRoaXMuZGlyZWN0aXZlLnNjcm9sbFRvKHByZXZTY3JvbGxQb3NpdGlvbik7XG4gIH1cbn1cbiJdfQ==