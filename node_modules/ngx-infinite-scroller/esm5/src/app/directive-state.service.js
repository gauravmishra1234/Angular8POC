var DirectiveStateService = /** @class */ (function () {
    function DirectiveStateService() {
    }
    Object.defineProperty(DirectiveStateService.prototype, "scrollTop", {
        get: function () {
            return this._el.nativeElement.scrollTop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "scrollHeight", {
        get: function () {
            return this._el.nativeElement.scrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "clientHeight", {
        get: function () {
            return this._el.nativeElement.clientHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "initMode", {
        get: function () {
            return this._initMode;
        },
        set: function (initMode) {
            this._initMode = initMode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "scrollStreamActive", {
        get: function () {
            return this._scrollStreamActive;
        },
        set: function (active) {
            this._scrollStreamActive = active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "previousScrollPositionpUpdated", {
        get: function () {
            return this._previousScrollPositionpUpdated;
        },
        set: function (previousScrollPositionpUpdated) {
            this._previousScrollPositionpUpdated = previousScrollPositionpUpdated;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "previousScrollTop", {
        get: function () {
            return this._previousScrollTop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DirectiveStateService.prototype, "previousScrollHeight", {
        get: function () {
            return this._previousScrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    DirectiveStateService.prototype.setup = function (params) {
        this._el = params.el;
        this._initMode = params.initMode;
        this._scrollStreamActive = params.scrollStreamActive;
        this._previousScrollPositionpUpdated = params.previousScrollPositionpUpdated;
        this.updatePreviousScrollTop();
        this.updatePreviousScrollHeight();
    };
    DirectiveStateService.prototype.updatePreviousScrollTop = function () {
        this._previousScrollTop = this._el.nativeElement.scrollTop;
    };
    DirectiveStateService.prototype.updatePreviousScrollHeight = function () {
        this._previousScrollHeight = this._el.nativeElement.scrollHeight;
    };
    return DirectiveStateService;
}());
export { DirectiveStateService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlLXN0YXRlLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtaW5maW5pdGUtc2Nyb2xsZXIvIiwic291cmNlcyI6WyJzcmMvYXBwL2RpcmVjdGl2ZS1zdGF0ZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0lBQUE7SUErRUEsQ0FBQztJQTdFQyxzQkFBVyw0Q0FBUzthQUFwQjtZQUNFLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDO1FBQzFDLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsK0NBQVk7YUFBdkI7WUFDRSxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQztRQUM3QyxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLCtDQUFZO2FBQXZCO1lBQ0UsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUM7UUFDN0MsQ0FBQzs7O09BQUE7SUFFRCxzQkFBVywyQ0FBUTthQUFuQjtZQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztRQUN4QixDQUFDO2FBRUQsVUFBb0IsUUFBaUI7WUFDbkMsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7UUFDNUIsQ0FBQzs7O09BSkE7SUFNRCxzQkFBVyxxREFBa0I7YUFBN0I7WUFDRSxPQUFPLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztRQUNsQyxDQUFDO2FBRUQsVUFBOEIsTUFBZTtZQUMzQyxJQUFJLENBQUMsbUJBQW1CLEdBQUcsTUFBTSxDQUFDO1FBQ3BDLENBQUM7OztPQUpBO0lBTUQsc0JBQVcsaUVBQThCO2FBQXpDO1lBQ0UsT0FBTyxJQUFJLENBQUMsK0JBQStCLENBQUM7UUFDOUMsQ0FBQzthQUVELFVBQTBDLDhCQUF1QztZQUMvRSxJQUFJLENBQUMsK0JBQStCLEdBQUcsOEJBQThCLENBQUM7UUFDeEUsQ0FBQzs7O09BSkE7SUFNRCxzQkFBVyxvREFBaUI7YUFBNUI7WUFDRSxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQztRQUNqQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLHVEQUFvQjthQUEvQjtZQUNFLE9BQU8sSUFBSSxDQUFDLHFCQUFxQixDQUFDO1FBQ3BDLENBQUM7OztPQUFBO0lBY00scUNBQUssR0FBWixVQUFhLE1BS1o7UUFDQyxJQUFJLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxNQUFNLENBQUMsa0JBQWtCLENBQUM7UUFDckQsSUFBSSxDQUFDLCtCQUErQixHQUFHLE1BQU0sQ0FBQyw4QkFBOEIsQ0FBQztRQUM3RSxJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQztRQUMvQixJQUFJLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztJQUNwQyxDQUFDO0lBRU0sdURBQXVCLEdBQTlCO1FBQ0UsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQztJQUM3RCxDQUFDO0lBRU0sMERBQTBCLEdBQWpDO1FBQ0UsSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQztJQUNuRSxDQUFDO0lBQ0gsNEJBQUM7QUFBRCxDQUFDLEFBL0VELElBK0VDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgY2xhc3MgRGlyZWN0aXZlU3RhdGVTZXJ2aWNlIHtcblxuICBwdWJsaWMgZ2V0IHNjcm9sbFRvcCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9lbC5uYXRpdmVFbGVtZW50LnNjcm9sbFRvcDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgc2Nyb2xsSGVpZ2h0KCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsSGVpZ2h0O1xuICB9XG5cbiAgcHVibGljIGdldCBjbGllbnRIZWlnaHQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fZWwubmF0aXZlRWxlbWVudC5jbGllbnRIZWlnaHQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGluaXRNb2RlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9pbml0TW9kZTtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgaW5pdE1vZGUoaW5pdE1vZGU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9pbml0TW9kZSA9IGluaXRNb2RlO1xuICB9XG5cbiAgcHVibGljIGdldCBzY3JvbGxTdHJlYW1BY3RpdmUoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX3Njcm9sbFN0cmVhbUFjdGl2ZTtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgc2Nyb2xsU3RyZWFtQWN0aXZlKGFjdGl2ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX3Njcm9sbFN0cmVhbUFjdGl2ZSA9IGFjdGl2ZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgcHJldmlvdXNTY3JvbGxQb3NpdGlvbnBVcGRhdGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9wcmV2aW91c1Njcm9sbFBvc2l0aW9ucFVwZGF0ZWQ7XG4gIH1cblxuICBwdWJsaWMgc2V0IHByZXZpb3VzU2Nyb2xsUG9zaXRpb25wVXBkYXRlZChwcmV2aW91c1Njcm9sbFBvc2l0aW9ucFVwZGF0ZWQ6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9wcmV2aW91c1Njcm9sbFBvc2l0aW9ucFVwZGF0ZWQgPSBwcmV2aW91c1Njcm9sbFBvc2l0aW9ucFVwZGF0ZWQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0IHByZXZpb3VzU2Nyb2xsVG9wKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX3ByZXZpb3VzU2Nyb2xsVG9wO1xuICB9XG5cbiAgcHVibGljIGdldCBwcmV2aW91c1Njcm9sbEhlaWdodCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9wcmV2aW91c1Njcm9sbEhlaWdodDtcbiAgfVxuXG4gIHByaXZhdGUgX2VsOiBFbGVtZW50UmVmO1xuXG4gIHByaXZhdGUgX2luaXRNb2RlOiBib29sZWFuO1xuXG4gIHByaXZhdGUgX3Njcm9sbFN0cmVhbUFjdGl2ZTogYm9vbGVhbjtcblxuICBwcml2YXRlIF9wcmV2aW91c1Njcm9sbFBvc2l0aW9ucFVwZGF0ZWQ6IGJvb2xlYW47XG5cbiAgcHJpdmF0ZSBfcHJldmlvdXNTY3JvbGxUb3A6IG51bWJlcjtcblxuICBwcml2YXRlIF9wcmV2aW91c1Njcm9sbEhlaWdodDogbnVtYmVyO1xuXG4gIHB1YmxpYyBzZXR1cChwYXJhbXM6IHtcbiAgICBlbDogRWxlbWVudFJlZixcbiAgICBpbml0TW9kZTogYm9vbGVhbixcbiAgICBzY3JvbGxTdHJlYW1BY3RpdmU6IGJvb2xlYW4sXG4gICAgcHJldmlvdXNTY3JvbGxQb3NpdGlvbnBVcGRhdGVkOiBib29sZWFuXG4gIH0pOiB2b2lkIHtcbiAgICB0aGlzLl9lbCA9IHBhcmFtcy5lbDtcbiAgICB0aGlzLl9pbml0TW9kZSA9IHBhcmFtcy5pbml0TW9kZTtcbiAgICB0aGlzLl9zY3JvbGxTdHJlYW1BY3RpdmUgPSBwYXJhbXMuc2Nyb2xsU3RyZWFtQWN0aXZlO1xuICAgIHRoaXMuX3ByZXZpb3VzU2Nyb2xsUG9zaXRpb25wVXBkYXRlZCA9IHBhcmFtcy5wcmV2aW91c1Njcm9sbFBvc2l0aW9ucFVwZGF0ZWQ7XG4gICAgdGhpcy51cGRhdGVQcmV2aW91c1Njcm9sbFRvcCgpO1xuICAgIHRoaXMudXBkYXRlUHJldmlvdXNTY3JvbGxIZWlnaHQoKTtcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGVQcmV2aW91c1Njcm9sbFRvcCgpOiB2b2lkIHtcbiAgICB0aGlzLl9wcmV2aW91c1Njcm9sbFRvcCA9IHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQuc2Nyb2xsVG9wO1xuICB9XG5cbiAgcHVibGljIHVwZGF0ZVByZXZpb3VzU2Nyb2xsSGVpZ2h0KCk6IHZvaWQge1xuICAgIHRoaXMuX3ByZXZpb3VzU2Nyb2xsSGVpZ2h0ID0gdGhpcy5fZWwubmF0aXZlRWxlbWVudC5zY3JvbGxIZWlnaHQ7XG4gIH1cbn1cbiJdfQ==